Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X7900]
	code address: 0x007900

[	SCOPE INIT_VDP]
	Scope path: INIT_VDP:

[INIT_VDP ::]
	global label address: 0x007900

[	DI] Z80:5cyc, R800:2cyc
007900: f3

[	CALL WRITE_VDP_REGS] Z80:18cyc, R800:5cyc
007901: cd c2 7a

[VDP_INIT_DATA ::]
	global label address: 0x007904

[	DB 0X80 | 1 , 0X23]
007904: 81 23

[	DB 0X80 | 0 , 0X08]
007906: 80 08

[	DB 0X80 | 8 , 0X28]
007908: 88 28

[	DB 0X80 | 9 , 0X00]
00790a: 89 00

[	DB 0X80 | 2 , 0X1F | ( 1 << 5 )]
00790c: 82 3f

[	DB 0X80 | 5 , 0X7780 >> 7]
00790e: 85 ef

[	DB 0X80 | 11 , 0X00]
007910: 8b 00

[	DB 0X80 | 6 , 0X7800 >> 11]
007912: 86 0f

[	DB 0X80 | 7 , 0X55]
007914: 87 55

[	DB 0X80 | 15 , 2]
007916: 8f 02

[	DB 0X80 | 16 , 0]
007918: 90 00

[	DB 0X80 | 25 , 3]
00791a: 99 03

[	DB 0X80 | 26 , 0X20]
00791c: 9a 20

[	DB 0X80 | 27 , 0X01]
00791e: 9b 01

[	DB 0X80 | 36 , 0]
007920: a4 00

[	DB 0X80 | 37 , 0]
007922: a5 00

[	DB 0X80 | 38 , 0]
007924: a6 00

[	DB 0X80 | 39 , 0]
007926: a7 00

[	DB 0X80 | 40 , 0]
007928: a8 00

[	DB 0X80 | 41 , 2]
00792a: a9 02

[	DB 0X80 | 42 , 0]
00792c: aa 00

[	DB 0X80 | 43 , 2]
00792e: ab 02

[	DB 0X80 | 44 , 0X55]
007930: ac 55

[	DB 0X80 | 45 , 0]
007932: ad 00

[	DB 0X80 | 46 , 0B11000000]
007934: ae c0

[	DB 0X00]
007936: 00

[WAIT_VDP_COMMAND :]
	label address: 0x007937

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
007937: db 99

[	RRCA] Z80:5cyc, R800:1cyc
007939: 0f

[	JR C , WAIT_VDP_COMMAND] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00793a: 38 fb

[	ENDSCOPE]
	Scope path: 

[	SCOPE INIT_PALETTE]
	Scope path: INIT_PALETTE:

[INIT_PALETTE ::]
	global label address: 0x00793c

[	LD A , 13] Z80:8cyc, R800:2cyc
00793c: 3e 0d

[	OUT [ RTC_ADDRESS ] , A] Z80:12cyc, R800:10 or 9cyc
00793e: d3 b4

[	IN A , [ RTC_DATA ]] Z80:12cyc, R800:10 or 9cyc
007940: db b5

[	AND A , 0X0C] Z80:8cyc, R800:2cyc
007942: e6 0c

[	OR A , 0X02] Z80:8cyc, R800:2cyc
007944: f6 02

[	OUT [ RTC_DATA ] , A] Z80:12cyc, R800:10 or 9cyc
007946: d3 b5

[	LD A , 0X0B] Z80:8cyc, R800:2cyc
007948: 3e 0b

[	OUT [ RTC_ADDRESS ] , A] Z80:12cyc, R800:10 or 9cyc
00794a: d3 b4

[	IN A , [ RTC_DATA ]] Z80:12cyc, R800:10 or 9cyc
00794c: db b5

[	AND A , 0X03] Z80:8cyc, R800:2cyc
00794e: e6 03

[	ADD A , A] Z80:5cyc, R800:1cyc
007950: 87

[	ADD A , A] Z80:5cyc, R800:1cyc
007951: 87

[	LD H , 0XFF & ( COLOR_DATA1 >> 8 )] Z80:8cyc, R800:2cyc
007952: 26 7b

[	ADD A , 0XFF & COLOR_DATA1] Z80:8cyc, R800:2cyc
007954: c6 48

[	LD L , A] Z80:5cyc, R800:2cyc
007956: 6f

[	LD BC , ( 4 << 8 ) | VDP_PORT2] Z80:11cyc, R800:3cyc
007957: 01 9a 04

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00795a: ed b3

[	LD L , 0XFF & COLOR_DATA2] Z80:8cyc, R800:2cyc
00795c: 2e 58

[	LD B , 4] Z80:8cyc, R800:2cyc
00795e: 06 04

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
007960: ed b3

[	ENDSCOPE]
	Scope path: 

[	SCOPE INIT_VRAM]
	Scope path: INIT_VRAM:

[	PUSH HL] Z80:12cyc, R800:6cyc
007962: e5

[	LD HL , 0X7400] Z80:11cyc, R800:3cyc
007963: 21 00 74

[	LD BC , 16 * 32] Z80:11cyc, R800:3cyc
007966: 01 00 02

[	LD E , 0X05] Z80:8cyc, R800:2cyc
007969: 1e 05

[	CALL FILL_VRAM] Z80:18cyc, R800:5cyc
00796b: cd d4 7a

[	LD H , 0X7800 >> 8] Z80:8cyc, R800:2cyc
00796e: 26 78

[	LD BC , 0X30 + 256] Z80:11cyc, R800:3cyc
007970: 01 30 01

[	LD E , 0XFF] Z80:8cyc, R800:2cyc
007973: 1e ff

[	CALL FILL_VRAM] Z80:18cyc, R800:5cyc
007975: cd d4 7a

[	LD L , 0X7830 & 0XFF] Z80:8cyc, R800:2cyc
007978: 2e 30

[	LD BC , 0X10 + 256] Z80:11cyc, R800:3cyc
00797a: 01 10 01

[	LD E , 0XF0] Z80:8cyc, R800:2cyc
00797d: 1e f0

[	CALL FILL_VRAM] Z80:18cyc, R800:5cyc
00797f: cd d4 7a

[	LD HL , 0X7600] Z80:11cyc, R800:3cyc
007982: 21 00 76

[	CALL SET_WRITE_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
007985: cd e0 7a

[	POP HL] Z80:11cyc, R800:5cyc
007988: e1

[	LD BC , ( SPRITE_ATTRIB_SIZE << 8 ) | VDP_PORT0] Z80:11cyc, R800:3cyc
007989: 01 98 28

[	ENDSCOPE]
	Scope path: 

[	SCOPE DECOMPRESS_LOGO_IMAGE]
	Scope path: DECOMPRESS_LOGO_IMAGE:

[DECOMPRESS_LOGO_IMAGE ::]
	global label address: 0x00798c

[	CALL OTIR_AND_WRITE_VDP_REGS] Z80:18cyc, R800:5cyc
00798c: cd c0 7a

[	DB 0X80 | 25 , 3]
00798f: 99 03

[	DB 0X80 | 2 , 0X3F]
007991: 82 3f

[_RUN_LMCM_COMMAND :]
	label address: 0x007993

[	DB 0X80 | 46 , 0XA0]
007993: ae a0

[_RUN_LMMC_COMMAND :]
	label address: 0x007995

[	DB 0X80 | 17 , 36]
007995: 91 24

[	DB 0X00]
007997: 00

[	LD BC , ( LOGO_DRAW_COMMAND_SIZE << 8 ) | VDP_PORT3] Z80:11cyc, R800:3cyc
007998: 01 9b 0b

[	CALL OTIR_AND_WRITE_VDP_REGS] Z80:18cyc, R800:5cyc
00799b: cd c0 7a

[	DB 0X80 | 17 , 0X80 | 44]
00799e: 91 ac

[	DB 0X00]
0079a0: 00

[_DECOMPRESS_LOOP :]
	label address: 0x0079a1

[	LD E , A] Z80:5cyc, R800:2cyc
0079a1: 5f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0079a2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0079a3: 23

[	RRA] Z80:5cyc, R800:1cyc
0079a4: 1f

[	JR C , _FIXED_DATA] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079a5: 38 2d

[	RRA] Z80:5cyc, R800:1cyc
0079a7: 1f

[	LD D , A] Z80:5cyc, R800:2cyc
0079a8: 57

[	EX AF , AF'] Z80:5cyc, R800:1cyc
0079a9: 08

[	LD A , D] Z80:5cyc, R800:2cyc
0079aa: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0079ab: b7

[	JR NZ , _SKIP_NON_ZERO] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079ac: 20 02

[	LD A , 63] Z80:8cyc, R800:2cyc
0079ae: 3e 3f

[_SKIP_NON_ZERO :]
	label address: 0x0079b0

[	LD B , A] Z80:5cyc, R800:2cyc
0079b0: 47

[_RUN_LENGTH_LOOP :]
	label address: 0x0079b1

[	CALL WAIT_TANSFER_READY] Z80:18cyc, R800:5cyc
0079b1: cd ee 79

[	OUT [ C ] , E] Z80:14cyc, R800:10 or 9cyc
0079b4: ed 59

[	DJNZ _RUN_LENGTH_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079b6: 10 f9

[	LD A , D] Z80:5cyc, R800:2cyc
0079b8: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0079b9: b7

[	JR NZ , _GRAY_PROCESS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079ba: 20 09

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0079bc: 56

[	INC HL] Z80:7cyc, R800:1cyc
0079bd: 23

[	LD B , D] Z80:5cyc, R800:2cyc
0079be: 42

[	INC B] Z80:5cyc, R800:1cyc
0079bf: 04

[	DJNZ _RUN_LENGTH_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079c0: 10 ef

[	DEC B] Z80:5cyc, R800:1cyc
0079c2: 05

[	JR _RUN_LENGTH_LOOP] Z80:13cyc, R800:3cyc
0079c3: 18 ec

[_GRAY_PROCESS :]
	label address: 0x0079c5

[	EX AF , AF'] Z80:5cyc, R800:1cyc
0079c5: 08

[	JR NC , _NEXT_COLOR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079c6: 30 07

[	CALL WAIT_TANSFER_READY] Z80:18cyc, R800:5cyc
0079c8: cd ee 79

[	LD A , 2] Z80:8cyc, R800:2cyc
0079cb: 3e 02

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
0079cd: ed 79

[_NEXT_COLOR :]
	label address: 0x0079cf

[	LD A , E] Z80:5cyc, R800:2cyc
0079cf: 7b

[	XOR A , 3] Z80:8cyc, R800:2cyc
0079d0: ee 03

[	JR _DECOMPRESS_LOOP] Z80:13cyc, R800:3cyc
0079d2: 18 cd

[_FIXED_DATA :]
	label address: 0x0079d4

[	LD B , 3] Z80:8cyc, R800:2cyc
0079d4: 06 03

[	LD D , A] Z80:5cyc, R800:2cyc
0079d6: 57

[_FIXED_DATA_LOOP :]
	label address: 0x0079d7

[	LD A , D] Z80:5cyc, R800:2cyc
0079d7: 7a

[	AND A , 3] Z80:8cyc, R800:2cyc
0079d8: e6 03

[	LD E , A] Z80:5cyc, R800:2cyc
0079da: 5f

[	SRL D] Z80:10cyc, R800:2cyc
0079db: cb 3a

[	SRL D] Z80:10cyc, R800:2cyc
0079dd: cb 3a

[	CALL WAIT_TANSFER_READY] Z80:18cyc, R800:5cyc
0079df: cd ee 79

[	OUT [ C ] , E] Z80:14cyc, R800:10 or 9cyc
0079e2: ed 59

[	DJNZ _FIXED_DATA_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079e4: 10 f1

[	LD A , D] Z80:5cyc, R800:2cyc
0079e6: 7a

[	ADD A , D] Z80:5cyc, R800:1cyc
0079e7: 82

[	ADD A , D] Z80:5cyc, R800:1cyc
0079e8: 82

[	JR _DECOMPRESS_LOOP] Z80:13cyc, R800:3cyc
0079e9: 18 b6

[	ENDSCOPE]
	Scope path: 

[	SCOPE WAIT_TANSFER_READY]
	Scope path: WAIT_TANSFER_READY:

[LOOP :]
	label address: 0x0079eb

[	AND A , 0X40] Z80:8cyc, R800:2cyc
0079eb: e6 40

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0079ed: c0

[WAIT_TANSFER_READY ::]
	global label address: 0x0079ee

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
0079ee: db 99

[	RRCA] Z80:5cyc, R800:1cyc
0079f0: 0f

[	JR C , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079f1: 38 f8

[_LMMC_END :]
	label address: 0x0079f3

[	POP DE] Z80:11cyc, R800:5cyc
0079f3: d1

[	ENDSCOPE]
	Scope path: 

[	SCOPE ANIMATION_PROCESS]
	Scope path: ANIMATION_PROCESS:

[ANIMATION_PROCESS ::]
	global label address: 0x0079f4

[	CALL _FILL_WORK_AREA] Z80:18cyc, R800:5cyc
0079f4: cd 89 7a

[	DW 0X00FF , 0X0120]
0079f7: ff 00 20 01

[_WAIT_VSYNC1 :]
	label address: 0x0079fb

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
0079fb: db 99

[	AND A , 0X40] Z80:8cyc, R800:2cyc
0079fd: e6 40

[	JR Z , _WAIT_VSYNC1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0079ff: 28 fa

[_WAIT_VSYNC2 :]
	label address: 0x007a01

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
007a01: db 99

[	AND A , 0X40] Z80:8cyc, R800:2cyc
007a03: e6 40

[	JR NZ , _WAIT_VSYNC2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a05: 20 fa

[	CALL WRITE_VDP_REGS] Z80:18cyc, R800:5cyc
007a07: cd c2 7a

[	DB 0X80 | 15 , 0]
007a0a: 8f 00

[	DB 0X80 | 1 , 0X63]
007a0c: 81 63

[	DB 0X00]
007a0e: 00

[	LD BC , ( 21 << 8 ) | VDP_PORT3] Z80:11cyc, R800:3cyc
007a0f: 01 9b 15

[_MAIN_LOOP :]
	label address: 0x007a12

[	PUSH BC] Z80:12cyc, R800:6cyc
007a12: c5

[SET_SCROLL :]
	label address: 0x007a13

[	LD B , 80] Z80:8cyc, R800:2cyc
007a13: 06 50

[	LD HL , WORK_AREA + 2] Z80:11cyc, R800:3cyc
007a15: 21 77 f9

[_LINE_LOOP :]
	label address: 0x007a18

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
007a18: 56

[	INC HL] Z80:7cyc, R800:1cyc
007a19: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
007a1a: 5e

[	INC HL] Z80:7cyc, R800:1cyc
007a1b: 23

[	INC HL] Z80:7cyc, R800:1cyc
007a1c: 23

[	INC HL] Z80:7cyc, R800:1cyc
007a1d: 23

[	LD A , 26] Z80:8cyc, R800:2cyc
007a1e: 3e 1a

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007a20: d3 99

[	LD A , 0X80 | 17] Z80:8cyc, R800:2cyc
007a22: 3e 91

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007a24: d3 99

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
007a26: db 99

[_WAIT_CLASH_SPRITE :]
	label address: 0x007a28

[	IN A , [ VDP_PORT1 ]] Z80:12cyc, R800:10 or 9cyc
007a28: db 99

[	AND A , 0X20] Z80:8cyc, R800:2cyc
007a2a: e6 20

[	JP Z , _WAIT_CLASH_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
007a2c: ca 28 7a

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
007a2f: ed 51

[	OUT [ C ] , E] Z80:14cyc, R800:10 or 9cyc
007a31: ed 59

[	DJNZ _LINE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a33: 10 e3

[	LD A , 26] Z80:8cyc, R800:2cyc
007a35: 3e 1a

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007a37: d3 99

[	LD A , 0X80 | 17] Z80:8cyc, R800:2cyc
007a39: 3e 91

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007a3b: d3 99

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
007a3d: ed 41

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
007a3f: ed 41

[_UPDATE_SCROLL_POSITION :]
	label address: 0x007a41

[	LD IX , WORK_AREA] Z80:16cyc, R800:4cyc
007a41: dd 21 75 f9

[	LD IY , ANIMATION_DATA] Z80:16cyc, R800:4cyc
007a45: fd 21 f8 7a

[	LD D , B] Z80:5cyc, R800:2cyc
007a49: 50

[	LD B , 40] Z80:8cyc, R800:2cyc
007a4a: 06 28

[_UPDATE_SCROLL_LOOP :]
	label address: 0x007a4c

[	LD L , [ IX + 0 ]] Z80:21cyc, R800:7cyc
007a4c: dd 6e 00

[	LD H , [ IX + 1 ]] Z80:21cyc, R800:7cyc
007a4f: dd 66 01

[	LD E , [ IY + 0 ]] Z80:21cyc, R800:7cyc
007a52: fd 5e 00

[	SBC HL , DE] Z80:17cyc, R800:2cyc
007a55: ed 52

[	JR NC , _NOT_BORROW1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a57: 30 02

[	LD L , D] Z80:5cyc, R800:2cyc
007a59: 6a

[	LD H , D] Z80:5cyc, R800:2cyc
007a5a: 62

[_NOT_BORROW1 :]
	label address: 0x007a5b

[	CALL CALC_REG_VALUE] Z80:18cyc, R800:5cyc
007a5b: cd 9a 7a

[	LD L , [ IX + 0 ]] Z80:21cyc, R800:7cyc
007a5e: dd 6e 00

[	LD H , [ IX + 1 ]] Z80:21cyc, R800:7cyc
007a61: dd 66 01

[	LD E , [ IY + 0 ]] Z80:21cyc, R800:7cyc
007a64: fd 5e 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
007a67: 19

[	LD A , H] Z80:5cyc, R800:2cyc
007a68: 7c

[	CP A , 2] Z80:8cyc, R800:2cyc
007a69: fe 02

[	JR C , _NOT_CARRY1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a6b: 38 03

[	LD HL , 512] Z80:11cyc, R800:3cyc
007a6d: 21 00 02

[_NOT_CARRY1 :]
	label address: 0x007a70

[	CALL CALC_REG_VALUE] Z80:18cyc, R800:5cyc
007a70: cd 9a 7a

[	DJNZ _UPDATE_SCROLL_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a73: 10 d7

[	POP BC] Z80:11cyc, R800:5cyc
007a75: c1

[	DJNZ _MAIN_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007a76: 10 9a

[	CALL WRITE_VDP_REGS] Z80:18cyc, R800:5cyc
007a78: cd c2 7a

[	DB 0X80 | 25 , 0]
007a7b: 99 00

[	DB 0X80 | 2 , 0X1F]
007a7d: 82 1f

[	DB 0X00]
007a7f: 00

[	CALL _FILL_WORK_AREA] Z80:18cyc, R800:5cyc
007a80: cd 89 7a

[	DW 0 , 0]
007a83: 00 00 00 00

[	EI] Z80:5cyc, R800:1cyc
007a87: fb

[	RET] Z80:11cyc, R800:5cyc
007a88: c9

[_FILL_WORK_AREA :]
	label address: 0x007a89

[	POP HL] Z80:11cyc, R800:5cyc
007a89: e1

[	LD DE , WORK_AREA] Z80:11cyc, R800:3cyc
007a8a: 11 75 f9

[	PUSH DE] Z80:12cyc, R800:6cyc
007a8d: d5

[	LD BC , 4] Z80:11cyc, R800:3cyc
007a8e: 01 04 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
007a91: ed b0

[	EX [ SP ] , HL] Z80:20cyc, R800:7cyc
007a93: e3

[	LD BC , ( 80 - 1 ) * 4] Z80:11cyc, R800:3cyc
007a94: 01 3c 01

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
007a97: ed b0

[	RET] Z80:11cyc, R800:5cyc
007a99: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE CALC_REG_VALUE]
	Scope path: CALC_REG_VALUE:

[CALC_REG_VALUE ::]
	global label address: 0x007a9a

[	LD [ IX + 0 ] , L] Z80:8cyc, R800:4cyc
007a9a: dd 75 00

[	LD [ IX + 1 ] , H] Z80:8cyc, R800:4cyc
007a9d: dd 74 01

[	DEC HL] Z80:7cyc, R800:1cyc
007aa0: 2b

[	LD A , L] Z80:5cyc, R800:2cyc
007aa1: 7d

[	RRC H] Z80:10cyc, R800:2cyc
007aa2: cb 0c

[	RRA] Z80:5cyc, R800:1cyc
007aa4: 1f

[	RRA] Z80:5cyc, R800:1cyc
007aa5: 1f

[	RRA] Z80:5cyc, R800:1cyc
007aa6: 1f

[	INC A] Z80:5cyc, R800:1cyc
007aa7: 3c

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
007aa8: e6 3f

[	LD [ IX + 2 ] , A] Z80:8cyc, R800:4cyc
007aaa: dd 77 02

[	LD A , 7] Z80:8cyc, R800:2cyc
007aad: 3e 07

[	SUB A , L] Z80:5cyc, R800:1cyc
007aaf: 95

[	AND A , 0X07] Z80:8cyc, R800:2cyc
007ab0: e6 07

[	LD [ IX + 3 ] , A] Z80:8cyc, R800:4cyc
007ab2: dd 77 03

[	INC IX] Z80:12cyc, R800:1cyc
007ab5: dd 23

[	INC IX] Z80:12cyc, R800:1cyc
007ab7: dd 23

[	INC IX] Z80:12cyc, R800:1cyc
007ab9: dd 23

[	INC IX] Z80:12cyc, R800:1cyc
007abb: dd 23

[	INC IY] Z80:12cyc, R800:1cyc
007abd: fd 23

[	RET] Z80:11cyc, R800:5cyc
007abf: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE WRITE_VDP_REGS]
	Scope path: WRITE_VDP_REGS:

[OTIR_AND_WRITE_VDP_REGS ::]
	global label address: 0x007ac0

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
007ac0: ed b3

[WRITE_VDP_REGS ::]
	global label address: 0x007ac2

[	EX [ SP ] , HL] Z80:20cyc, R800:7cyc
007ac2: e3

[	JR START1] Z80:13cyc, R800:3cyc
007ac3: 18 08

[LOOP1 :]
	label address: 0x007ac5

[	LD E , A] Z80:5cyc, R800:2cyc
007ac5: 5f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
007ac6: 7e

[	INC HL] Z80:7cyc, R800:1cyc
007ac7: 23

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007ac8: d3 99

[	LD A , E] Z80:5cyc, R800:2cyc
007aca: 7b

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007acb: d3 99

[START1 :]
	label address: 0x007acd

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
007acd: 7e

[	INC HL] Z80:7cyc, R800:1cyc
007ace: 23

[	OR A , A] Z80:5cyc, R800:1cyc
007acf: b7

[	JR NZ , LOOP1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007ad0: 20 f3

[	EX [ SP ] , HL] Z80:20cyc, R800:7cyc
007ad2: e3

[	RET] Z80:11cyc, R800:5cyc
007ad3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILL_VRAM]
	Scope path: FILL_VRAM:

[FILL_VRAM ::]
	global label address: 0x007ad4

[	CALL SET_WRITE_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
007ad4: cd e0 7a

[	LD A , E] Z80:5cyc, R800:2cyc
007ad7: 7b

[LOOP :]
	label address: 0x007ad8

[	OUT [ VDP_PORT0 ] , A] Z80:12cyc, R800:10 or 9cyc
007ad8: d3 98

[	DEC C] Z80:5cyc, R800:1cyc
007ada: 0d

[	JR NZ , LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007adb: 20 fb

[	DJNZ LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
007add: 10 f9

[	RET] Z80:11cyc, R800:5cyc
007adf: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SET_WRITE_VRAM_ADDRESS]
	Scope path: SET_WRITE_VRAM_ADDRESS:

[SET_WRITE_VRAM_ADDRESS ::]
	global label address: 0x007ae0

[	LD A , H] Z80:5cyc, R800:2cyc
007ae0: 7c

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
007ae1: e6 3f

[	OR A , 0X40] Z80:8cyc, R800:2cyc
007ae3: f6 40

[	EX AF , AF'] Z80:5cyc, R800:1cyc
007ae5: 08

[	LD A , H] Z80:5cyc, R800:2cyc
007ae6: 7c

[	RLCA] Z80:5cyc, R800:1cyc
007ae7: 07

[	RLCA] Z80:5cyc, R800:1cyc
007ae8: 07

[	AND A , 0X03] Z80:8cyc, R800:2cyc
007ae9: e6 03

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007aeb: d3 99

[	LD A , 0X80 | 14] Z80:8cyc, R800:2cyc
007aed: 3e 8e

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007aef: d3 99

[	LD A , L] Z80:5cyc, R800:2cyc
007af1: 7d

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007af2: d3 99

[	EX AF , AF'] Z80:5cyc, R800:1cyc
007af4: 08

[	OUT [ VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
007af5: d3 99

[	RET] Z80:11cyc, R800:5cyc
007af7: c9

[	ENDSCOPE]
	Scope path: 

[ANIMATION_DATA ::]
	global label address: 0x007af8

[	DB 0X13 , 0X0D]
007af8: 13 0d

[	DB 0X15 , 0X12]
007afa: 15 12

[	DB 0X14 , 0X0E]
007afc: 14 0e

[	DB 0X10 , 0X17]
007afe: 10 17

[	DB 0X13 , 0X11]
007b00: 13 11

[	DB 0X15 , 0X11]
007b02: 15 11

[	DB 0X0E , 0X0D]
007b04: 0e 0d

[	DB 0X11 , 0X15]
007b06: 11 15

[	DB 0X0C , 0X11]
007b08: 0c 11

[	DB 0X13 , 0X11]
007b0a: 13 11

[	DB 0X15 , 0X15]
007b0c: 15 15

[	DB 0X12 , 0X0C]
007b0e: 12 0c

[	DB 0X0F , 0X10]
007b10: 0f 10

[	DB 0X0E , 0X0E]
007b12: 0e 0e

[	DB 0X15 , 0X0D]
007b14: 15 0d

[	DB 0X0F , 0X11]
007b16: 0f 11

[	DB 0X11 , 0X11]
007b18: 11 11

[	DB 0X17 , 0X14]
007b1a: 17 14

[	DB 0X0D , 0X0D]
007b1c: 0d 0d

[	DB 0X0C , 0X0C]
007b1e: 0c 0c

[	DB 0X0D , 0X10]
007b20: 0d 10

[	DB 0X15 , 0X12]
007b22: 15 12

[	DB 0X17 , 0X10]
007b24: 17 10

[	DB 0X0E , 0X17]
007b26: 0e 17

[	DB 0X11 , 0X0C]
007b28: 11 0c

[	DB 0X12 , 0X13]
007b2a: 12 13

[	DB 0X17 , 0X0E]
007b2c: 17 0e

[	DB 0X16 , 0X14]
007b2e: 16 14

[	DB 0X14 , 0X0E]
007b30: 14 0e

[	DB 0X14 , 0X15]
007b32: 14 15

[	DB 0X0E , 0X0E]
007b34: 0e 0e

[	DB 0X13 , 0X0F]
007b36: 13 0f

[	DB 0X11 , 0X13]
007b38: 11 13

[	DB 0X13 , 0X0F]
007b3a: 13 0f

[	DB 0X17 , 0X15]
007b3c: 17 15

[	DB 0X0D , 0X15]
007b3e: 0d 15

[	DB 0X0F , 0X17]
007b40: 0f 17

[	DB 0X0C , 0X0D]
007b42: 0c 0d

[	DB 0X16 , 0X0C]
007b44: 16 0c

[	DB 0X11 , 0X0E]
007b46: 11 0e

[COLOR_DATA1 ::]
	global label address: 0x007b48

[	DB 0X00 , 0X00 , 0X07 , 0X00]
007b48: 00 00 07 00

[	DB 0X27 , 0X02 , 0X20 , 0X04]
007b4c: 27 02 20 04

[	DB 0X56 , 0X00 , 0X72 , 0X02]
007b50: 56 00 72 02

[	DB 0X70 , 0X00 , 0X70 , 0X05]
007b54: 70 00 70 05

[COLOR_DATA2 ::]
	global label address: 0x007b58

[	DB 0X44 , 0X04]
007b58: 44 04

[	DB 0X77 , 0X07]
007b5a: 77 07

[SPRITE_ATTRIB ::]
	global label address: 0x007b5c

[	DB 0X01F , 0X0E8 , 0X000 , 0X000]
007b5c: 1f e8 00 00

[	DB 0X01F , 0X0E8 , 0X000 , 0X000]
007b60: 1f e8 00 00

[	DB 0X03F , 0X0E8 , 0X000 , 0X000]
007b64: 3f e8 00 00

[	DB 0X03F , 0X0E8 , 0X000 , 0X000]
007b68: 3f e8 00 00

[	DB 0X04F , 0X0E8 , 0X000 , 0X000]
007b6c: 4f e8 00 00

[	DB 0X04F , 0X0E8 , 0X000 , 0X000]
007b70: 4f e8 00 00

[	DB 0X01F , 0X000 , 0X004 , 0X000]
007b74: 1f 00 04 00

[	DB 0X03F , 0X000 , 0X004 , 0X000]
007b78: 3f 00 04 00

[	DB 0X04F , 0X000 , 0X004 , 0X000]
007b7c: 4f 00 04 00

[	DB 0X0D8 , 0X000 , 0X000 , 0X000]
007b80: d8 00 00 00

[SPRITE_ATTRIB_END ::]
	global label address: 0x007b84

[LOGO_DRAW_COMMAND ::]
	global label address: 0x007b84

[	DW 45]
007b84: 2d 00

[	DW 32]
007b86: 20 00

[	DW 422]
007b88: a6 01

[	DW 80]
007b8a: 50 00

[	DB 0]
007b8c: 00

[	DB 0]
007b8d: 00

[	DB 0B1011_0000]
007b8e: b0

[LOGO_DRAW_COMMAND_END :]
	label address: 0x007b8f

[LOGO_DATA ::]
	global label address: 0x007b8f

[	BINARY_LINK "logo.bin"]
007b8f: 00 00 00 00 00 00 00 67
007b97: 20 1e 36 18 18 20 18 14
007b9f: 18 10 42 02 00 0f 20 14
007ba7: 4c 10 18 20 18 14 18 10
007baf: 4c 00 00 0d 24 10 54 81
007bb7: ff 7f 01 14 18 14 18 10
007bbf: 1c 16 1c 00 00 0e 1c 10
007bc7: 1c 20 18 81 ff 44 14 18
007bcf: 10 1c 1c 1c 00 00 0d 1c
007bd7: 81 ff 10 48 50 14 18 10
007bdf: 1c 16 1c 00 00 0e 1c 81
007be7: ff 10 48 50 14 18 10 4c
007bef: 00 00 0f 1c 81 ff 10 48
007bf7: 18 20 18 14 18 10 42 00
007bff: 00 11 1c 10 1c 20 18 81
007c07: ff 7f c1 2c f9 ff 14 f9
007c0f: ff 14 38 64 a6 02 1a 82
007c17: 86 00 2c 1c 10 54 81 ff
007c1f: 7f e1 2c f9 ff 14 f9 ff
007c27: 14 36 66 86 02 22 7a 84
007c2f: 00 2e 1c 14 4c 10 18 e1
007c37: ff 20 f9 ff 14 f9 ff 14
007c3f: 34 6c 74 00 29 72 84 00
007c47: 2f 1c 1e 36 18 18 f9 ff
007c4f: 20 f9 ff 14 f9 ff 14 32
007c57: 6e 68 02 2c 64 86 00 5a
007c5f: 1c 1c 10 1c 7f 01 40 74
007c67: 60 02 2f 5a 86 00 5a 7a
007c6f: 42 76 54 02 32 52 86 02
007c77: 5a 7c 40 7c 4e 00 35 48
007c7f: 88 00 5c 82 3a 7e 42 00
007c87: 38 3e 88 02 5c 84 38 84
007c8f: 3e 02 3a 32 86 00 5d 8a
007c97: 32 86 36 02 3c 2a 86 02
007c9f: 5d 8a 32 88 32 02 3e 20
007ca7: 8a 00 5e 92 2c 8e 2c 00
007caf: 41 16 88 02 5f 92 2a 90
007cb7: 28 02 43 c1 ff 7c 00 60
007cbf: 98 28 96 24 00 68 02 60
007cc7: 9a 22 96 20 02 67 00 61
007ccf: a0 20 9e 1a 02 66 02 61
007cd7: a2 1a 9e 18 7a 00 08 fc
007cdf: 00 63 a8 18 a6 14 76 02
007ce7: 0a ee 02 05 36 02 10 aa
007cef: 12 a6 14 74 02 0c e6 f6
007cf7: 5a 00 0f b0 10 ac 14 76
007cff: 02 0c de 02 02 50 02 0e
007d07: b2 c1 ff a2 10 7a 00 0d
007d0f: d4 02 0a 38 00 0e b8 e1
007d17: ff a4 12 02 01 aa c8 02
007d1f: 0b 36 02 0d 02 1e 10 02
007d27: 06 9a be 02 0b 36 00 0e
007d2f: 00 20 12 02 09 90 b6 02
007d37: 0b 38 02 0e 02 20 10 02
007d3f: 0c 8a aa a2 32 52 38 00
007d47: 0f 00 22 12 02 0e 82 a0
007d4f: 9a 4c 46 3a 02 0e 02 22
007d57: 12 02 0f 7e 98 8e 62 3a
007d5f: 3a 00 0f 00 24 14 02 10
007d67: 80 90 82 74 36 3a 02 0f
007d6f: 02 24 16 02 10 74 96 70
007d77: 84 30 3e 81 fd 2a f8 00
007d7f: 26 1a 02 10 6c 9e 7a 22
007d87: 12 38 2e 3e f1 ff 34 f2
007d8f: 02 26 1a 02 10 64 a8 ac
007d97: 3a 28 96 ec 00 28 22 02
007d9f: 0f 5a b0 a6 36 26 92 f2
007da7: 02 28 26 00 0e 56 ba 9a
007daf: 36 26 8a fc 00 2a 2e 00
007db7: 0d 4e c2 8e 3a 26 82 02
007dbf: 02 02 2a 36 02 0a 44 ce
007dc7: 82 3c 2c 76 00 06 00 2c
007dcf: 46 00 07 40 d8 60 58 2e
007dd7: 6a 02 08 02 2c 58 00 02
007ddf: 3a e0 58 5c 2e 5e 00 0b
007de7: 00 2e e6 76 32 ea 4e 5a
007def: 2e 62 02 09 78 e1 ff a6
007df7: e1 ff 66 e6 72 2e f2 48
007dff: 56 3a 2c 18 22 00 07 7a
007e07: c1 ff a4 81 fd 6c e8 72
007e0f: 28 fe 42 4a 05 42 1a 26
007e17: 22 02 04 78 10 ae 81 fd
007e1f: 6e e2 72 22 00 03 3c 3e
007e27: a6 26 00 02 7a 12 a8 14
007e2f: 78 de 74 22 00 05 36 28
007e37: 36 1f 01 76 26 fa 78 18
007e3f: a6 16 00 33 1e 02 07 2c
007e47: 22 3a 7f 01 82 24 f4 7a
007e4f: 1a a0 1c 02 32 1a 8a c1
007e57: ff 7e 26 1e 3a 10 92 22
007e5f: ee 78 1e 9e 1e 00 31 18
007e67: 8c 18 8a 20 20 3a 12 8e
007e6f: 28 ee 76 20 9c 24 02 30
007e77: 12 8c 20 8c 1c 20 36 16
007e7f: 8a 2a ec 78 26 96 26 00
007e87: 2f 12 8a 2a 88 16 1e 32
007e8f: 18 1e 42 24 30 ee 76 28
007e97: 94 2c 00 2e 12 8a 32 8a
007e9f: 81 fd 16 2a 8e 12 32 ec
007ea7: 78 2e 8e 2e 02 2c 81 ff
007eaf: 80 3e 86 81 fd 14 2a 22
007eb7: 28 8a ee 76 30 8c 34 02
007ebf: 2b 81 ff 7e 48 82 81 fd
007ec7: 14 22 26 46 6a f0 78 36
007ecf: 86 36 00 29 81 fd 82 52
007ed7: 7a 81 fd 12 1e 28 5e 52
007edf: f2 76 38 84 3c 02 27 81
007ee7: fd 82 5a 76 81 fd 12 16
007eef: 2e 6e 3c f8 78 3e 7e 3e
007ef7: 02 25 81 fd 80 66 72 81
007eff: fd 12 81 fd 2a 6e 42 f2
007f07: 76 40 7c 44 02 23 10 8a
007f0f: 70 6e 81 fd 52 6a 52 e8
007f17: 78 46 76 46 02 20 14 8a
007f1f: 7a 66 81 fd 56 5e 62 de
007f27: 76 48 74 4c 02 1e 16 88
007f2f: 86 62 81 fd 5a 4e 76 d4
007f37: 78 4e 6e 4e 02 1a 1e 86
007f3f: 8e 62 81 fd 5e 36 8e ca
007f47: 76 50 6c 54 02 15 2e 86
007f4f: 98 5e 81 fd 3e 10 8a 14
007f57: 3e 00 00 1a 42 1a 76 26
007f5f: 42 00 00 18 3a 26 62 38
007f67: 4a 00 00 16 2e 36 4a 4e
007f6f: 50 02 00 14 22 46 26 72
007f77: 52 02 00 55 52 02 00 56
007f7f: 4a 02 00 59 26 00 00 00
007f87: 00 00 00 00 69

[END_OF_PROGRAM ::]
	global label address: 0x007f8c

[IF ( COLOR_DATA1 & 0XFF ) + 16 > 0XFF]

[ENDIF]
	All condition is not selected.


[IF END_OF_PROGRAM > 0X8000]

[ELSE]

MESSAGE: FILE SIZE IS OK! (Remain 116Bytes): altbios_boot_logo.asm(614)
[SPACE 0X8000 - END_OF_PROGRAM , 0XFF]
	Allocate space: 116byte(s)
		Fill value: 255


<< label >>
ANIMATION_DATA 31480 ( 0x7af8 )
ANIMATION_PROCESS 31220 ( 0x79f4 )
ANIMATION_PROCESS:SET_SCROLL 31251 ( 0x7a13 )
ANIMATION_PROCESS:_FILL_WORK_AREA 31369 ( 0x7a89 )
ANIMATION_PROCESS:_LINE_LOOP 31256 ( 0x7a18 )
ANIMATION_PROCESS:_MAIN_LOOP 31250 ( 0x7a12 )
ANIMATION_PROCESS:_NOT_BORROW1 31323 ( 0x7a5b )
ANIMATION_PROCESS:_NOT_CARRY1 31344 ( 0x7a70 )
ANIMATION_PROCESS:_UPDATE_SCROLL_LOOP 31308 ( 0x7a4c )
ANIMATION_PROCESS:_UPDATE_SCROLL_POSITION 31297 ( 0x7a41 )
ANIMATION_PROCESS:_WAIT_CLASH_SPRITE 31272 ( 0x7a28 )
ANIMATION_PROCESS:_WAIT_VSYNC1 31227 ( 0x79fb )
ANIMATION_PROCESS:_WAIT_VSYNC2 31233 ( 0x7a01 )
CALC_REG_VALUE 31386 ( 0x7a9a )
COLOR_DATA1 31560 ( 0x7b48 )
COLOR_DATA2 31576 ( 0x7b58 )
DECOMPRESS_LOGO_IMAGE 31116 ( 0x798c )
DECOMPRESS_LOGO_IMAGE:_DECOMPRESS_LOOP 31137 ( 0x79a1 )
DECOMPRESS_LOGO_IMAGE:_FIXED_DATA 31188 ( 0x79d4 )
DECOMPRESS_LOGO_IMAGE:_FIXED_DATA_LOOP 31191 ( 0x79d7 )
DECOMPRESS_LOGO_IMAGE:_GRAY_PROCESS 31173 ( 0x79c5 )
DECOMPRESS_LOGO_IMAGE:_NEXT_COLOR 31183 ( 0x79cf )
DECOMPRESS_LOGO_IMAGE:_RUN_LENGTH_LOOP 31153 ( 0x79b1 )
DECOMPRESS_LOGO_IMAGE:_RUN_LMCM_COMMAND 31123 ( 0x7993 )
DECOMPRESS_LOGO_IMAGE:_RUN_LMMC_COMMAND 31125 ( 0x7995 )
DECOMPRESS_LOGO_IMAGE:_SKIP_NON_ZERO 31152 ( 0x79b0 )
END_OF_PROGRAM 32652 ( 0x7f8c )
FILL_VRAM 31444 ( 0x7ad4 )
FILL_VRAM:LOOP 31448 ( 0x7ad8 )
INIT_PALETTE 31036 ( 0x793c )
INIT_VDP 30976 ( 0x7900 )
INIT_VDP:WAIT_VDP_COMMAND 31031 ( 0x7937 )
LOGO_DATA 31631 ( 0x7b8f )
LOGO_DRAW_COMMAND 31620 ( 0x7b84 )
LOGO_DRAW_COMMAND_END 31631 ( 0x7b8f )
LOGO_DRAW_COMMAND_SIZE 11 ( 0xb )
OTIR_AND_WRITE_VDP_REGS 31424 ( 0x7ac0 )
RTC_ADDRESS 180 ( 0xb4 )
RTC_DATA 181 ( 0xb5 )
SET_WRITE_VRAM_ADDRESS 31456 ( 0x7ae0 )
SPRITE_ATTRIB 31580 ( 0x7b5c )
SPRITE_ATTRIB_END 31620 ( 0x7b84 )
SPRITE_ATTRIB_SIZE 40 ( 0x28 )
VDP_INIT_DATA 30980 ( 0x7904 )
VDP_PORT0 152 ( 0x98 )
VDP_PORT1 153 ( 0x99 )
VDP_PORT2 154 ( 0x9a )
VDP_PORT3 155 ( 0x9b )
WAIT_TANSFER_READY 31214 ( 0x79ee )
WAIT_TANSFER_READY:LOOP 31211 ( 0x79eb )
WAIT_TANSFER_READY:_LMMC_END 31219 ( 0x79f3 )
WORK_AREA 63861 ( 0xf975 )
WRITE_VDP_REGS 31426 ( 0x7ac2 )
WRITE_VDP_REGS:LOOP1 31429 ( 0x7ac5 )
WRITE_VDP_REGS:START1 31437 ( 0x7acd )
